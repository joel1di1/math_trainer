# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/fights' do
  let(:user) { create(:user) }
  let(:fight_opponent) { create(:fight_opponent) }

  before { sign_in(user) }

  describe 'GET /index' do
    it 'renders a successful response' do
      create_list(:fight, 3)

      get fights_url
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      fight = create(:fight)
      get fight_url(fight)
      expect(response).to be_successful
    end
  end

  describe 'GET /new' do
    it 'renders a successful response' do
      get new_fight_url
      expect(response).to be_successful
      expect(assigns(:fight_opponents)).to be_a(ActiveRecord::Relation)
    end
  end

  describe 'POST /fights' do
    context 'with valid parameters' do
      it 'creates a new Fight' do
        expect do
          post fights_path, params: { fight_opponent_id: fight_opponent.id }
        end.to change(Fight, :count).by(1)
      end

      it 'redirects to the created fight' do
        post fights_path, params: { fight_opponent_id: fight_opponent.id }
        expect(response).to redirect_to(play_fight_path(Fight.last))
      end
    end

    context 'with invalid parameters' do
      it 'does not create a new Fight' do
        expect do
          post fights_path, params: { fight_opponent_id: 9_999_999 }
        end.not_to change(Fight, :count)
      end

      it 'redirect to new fight' do
        post fights_path, params: { fight_opponent_id: 9_999_999 }
        expect(response).to redirect_to(new_fight_url)
      end
    end
  end
end
